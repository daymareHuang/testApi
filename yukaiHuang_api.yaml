openapi: 3.0.4
info:
  title: Student class selecting system
  description: none
  termsOfService: https://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.12

servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: class
    description: Everything about your Classes
  - name: professor
    description: The information about professor
paths:
  /class:
    get:
      tags:
        - class
      summary: list all the classes
      operationId: listClass
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '400':
          description: Invalid status value
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - class
      summary: add new class
      operationId: newClass
      requestBody:
        description: add a new Class
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newClassEntering'
      responses:
        '201': 
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newClass'
        '400':
          description: Invalid value
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - class
      summary: change the content of a class
      operationId: changeClassContent
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '400':
          description: Invalid value
        '404':
          description: Class not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /class/professor/{professorID}:
    get:
      tags:
        - class
      summary: list all classes by the professor
      operationId: listProClass
      parameters:
        - name: professorID
          in: path
          description: ID of professor
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '400':
          description: Invalid ID supplied
        '404':
          description: Professor not existed
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /class/{classID}:
    delete:
      tags:
        - class
      summary: delete the class by classID
      operationId: deleteClass
      parameters:
        - name: classID
          in: path
          description: ID of class
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Class'
        '404':
          description: Class not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /professor:
    get:
      tags:
        - professor
      summary: list all the professors
      operationId: listProfessor
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Professor'
        '400':
          description: Invalid status value
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      tags:
        - professor
      summary: add a new professor
      operationId: newProfessor
      requestBody:
        description: Create a new professor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newProfessorEntering'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newProfessor'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


components:
  schemas:
    Time:
      type: object
      properties:
        startTime: 
          type: integer
          format: int32
          example: 1300
        endTime:
          type: integer
          format: int32
          example: 1500
        
    Class:
      type: object
      properties:
        Cid:
          type: integer
          format: int32
          example: 1
        className:
          type: string
          example: 計算機概論
        summary:
          type: string
          example: theSummary
        weekday:
          type: string
          example: Monday
        time:
          $ref: '#/components/schemas/Time'
        place:
          type: string
          example: '北棟 101 教室'
        professor:
          $ref: '#/components/schemas/Professor'
        credict:
          type: integer
          example: 2
    newClass:
      type: object
      properties:
        Cid:
          type: integer
          format: int32
          example: 2
        className:
          type: string
          example: 計算機概論
        summary:
          type: string
          example: theSummary
        weekday:
          type: string
          example: Monday
        time:
          $ref: '#/components/schemas/Time'
        place:
          type: string
          example: '北棟 101 教室'
        professor:
          $ref: '#/components/schemas/newProfessor'
        credict:
          type: integer
          example: 2
    newClassEntering:
      type: object
      properties:
        className:
          type: string
          example: 計算機概論
        summary:
          type: string
          example: theSummary
        weekday:
          type: string
          example: Monday
        time:
          $ref: '#/components/schemas/Time'
        place:
          type: string
          example: '北棟 102 教室'
        professor:
          $ref: '#/components/schemas/newProfessor'
        credict:
          type: integer
          example: 2
    Professor:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: X教授
        email:
          type: string
          example: X@gmail.com
        phone:
          type: string
          example: 02-0000-0000#123
    newProfessorEntering:
      type: object
      properties:
        name:
          type: string
          example: S教授
        email:
          type: string
          example: S@gmail.com
        phone:
          type: string
          example: 02-0000-0000#456
    newProfessor:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        name:
          type: string
          example: S教授
        email:
          type: string
          example: S@gmail.com
        phone:
          type: string
          example: 02-0000-0000#456
        
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message 
    